# Configuration file for the Job Server agent.

# each second, files are checked. This value determines how many check are needed to ensure file is completely copied into directory
org.talend.remote.jobserver.server.fileevent.FileChangedSensor.FileEvent.checkFileCountBeforeFire=10

### Define connections
# used to launch talend commands
org.talend.remote.jobserver.server.TalendJobServer.COMMAND_SERVER_PORT=8003
org.talend.remote.jobserver.server.TalendJobServer.COMMAND_SERVER_HOST=localhost

# used for the file transfert
org.talend.remote.jobserver.server.TalendJobServer.FILE_SERVER_PORT=8004
org.talend.remote.jobserver.server.TalendJobServer.FILE_SERVER_HOST=localhost

# used for monitoring the servers state
org.talend.remote.jobserver.server.TalendJobServer.MONITORING_PORT=8891

# Enable the Monitoring port or not
org.talend.remote.jobserver.server.TalendJobServer.ENABLE_MONITORING_PORT=false

# used for the execution of process messages publisher, 8558 by default
org.talend.remote.jobserver.server.TalendJobServer.PROCESS_MESSAGE_PORT=8558
org.talend.remote.jobserver.server.TalendJobServer.PROCESS_MESSAGE_HOST=localhost

# Enable the process message publisher or not. false by default
org.talend.remote.jobserver.server.TalendJobServer.ENABLED_PROCESS_MESSAGE=false

# The local hostname of this server (default value is "localhost")
org.talend.remote.jobserver.server.TalendJobServer.LOCAL_HOST=localhost


# Use SSL (Secure Sockets Layer) for establishing an encrypted link between the JobServer and its clients
org.talend.remote.jobserver.server.TalendJobServer.USE_SSL=false

# Disabled SSL cipher suites(Java standard cipher suite names separated by a comma ',').
# If possible use org.talend.remote.server.ssl.enabled.cipher.suites instead
org.talend.remote.jobserver.server.TalendJobServer.DISABLED_CIPHER_SUITES=

# Allow specified OS users (separated by a comma ',') to start jobs. Wildcard is allowed. Example: RUN_AS_ALLOWLIST=myuser1,this.super-user, sub-user2,userprod*
# Set RUN_AS_ALLOWLIST=anybody to allow job execution for impersonation of any user and without impersonation
org.talend.remote.jobserver.server.TalendJobServer.RUN_AS_ALLOWLIST=

# Ensure that undesired instructions are not inserted in the username variable.
org.talend.remote.jobserver.server.TalendJobServer.RUN_AS_USER_VALIDATION_REGEXP=^[a-z][-a-z0-9]*\$

# The token that allow job server execute unsigned job
org.talend.remote.jobserver.server.TalendJobServer.EXECUTE_UNSIGNED_JOB_TOKEN=

# For remote monitoring and management (e.g. using jconsole) set the following port equal to the
# org.talend.remote.jobserver.server.TalendJobServerMain.MONITORING_PORT
# com.sun.management.jmxremote.port=8888

# list of partitions for this server separated by commas
#org.talend.monitoring.jmx.server.OsInfoRetriever.OS_PARTITIONS=/,/dev,/home
# e.g. for windows
#org.talend.monitoring.jmx.server.OsInfoRetriever.OS_PARTITIONS=C:,D:

# The directory path to the Talend jobserver files
org.talend.remote.jobserver.commons.config.JobServerConfiguration.ROOT_PATH=${karaf.base}/TalendJobServersFiles
#org.talend.remote.jobserver.commons.config.JobServerConfiguration.ROOT_PATH=C:\\TalendJobServersFiles

# Set to "true" in order to force the load of the native library. This should be used only for testing the native library.
# The value for production use should be "false". Do not change it if you are not sure about the consequences.
org.talend.monitoring.jmx.server.OsInfoRetriever.FORCE_LOAD=false

# Set the maximum of concurrent connections to the JobServer
org.talend.remote.server.MultiSocketServer.MAX_CONCURRENT_CONNECTIONS=1000

# Set the maximum life time of a server socket in seconds
# Cannot be lower than client configuration value 3600
org.talend.remote.server.MultiSocketServer.SERVER_SOCKET_LIFETIME=0

# Set the executable path of the binary which will run the job, for example: /usr/bin/java/java or c:\\Program Files\\Java\\bin\\java.exe
org.talend.remote.jobserver.commons.config.JobServerConfiguration.JOB_LAUNCHER_PATH=

# Absolute paths blocked for usage with file listeners for security reasons.
org.talend.remote.jobserver.commons.config.JobServerConfiguration.FILE_LISTENER_BLOCKED_PATHS=/

###############################################################
# Temporary data cleaning parameters
###############################################################

# Time in seconds between each cleaning action, set with 0 to disable all cleanings
org.talend.remote.jobserver.commons.config.JobServerConfiguration.FREQUENCY_CLEAN_ACTION=600

# Number of executions before the job execution release process happens
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MIN_NUMBER_JOB_EXECUTIONS_BEFORE_RELEASE=50

# Minimum elapsed time for a normal execution before it's ready to be released, 5 min = 5 * 60 * 1000
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_DURATION_BEFORE_JOB_EXECUTION_RELEASE_NORMAL_CASE=300000
# Minimum elapsed time for a abnormal execution before it's ready to be released, 24 hours = 24 * 60 * 60 * 1000
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_DURATION_BEFORE_JOB_EXECUTION_RELEASE_ABNORMAL_CASE=86400000

# Set the two parameters below to 0 to disable delete action for job
# Time in seconds before cleaning executions logs from the current date, 3 months=3*30*24*60*60=7776000
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_DURATION_BEFORE_CLEANING_OLD_EXECUTIONS_LOGS=7776000
# Max executions logs to keep, set with 0 to disable delete action with this method.
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_OLD_EXECUTIONS_LOGS=1000

# Maximum number of file listeners, 0 = No limit
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_FILE_LISTENERS=6000

# Maximum number of library dependencies embedded in a job
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_LIBRARY_DESC_NB=1000
# Maximum size of all library dependency names for a job
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_LIBRARY_DESC_SIZE=100KB

# Set the two parameters below to 0 to disable delete action for job
# Time in seconds before cleaning archives and deployed jobs from the current date, 3 months=3*30*24*60*60=7776000
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_DURATION_BEFORE_CLEANING_OLD_JOBS=7776000
# Maximum number of deployed jobs, 0 = No Limit
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_JOB_NB=6000
# Max archive and deployed jobs to keep, set with 0 to disable delete action with this method.
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_OLD_JOBS=200
# Max number of characters in classpath. If exceeded a classpath.jar file is created.
org.talend.remote.jobserver.commons.config.JobServerConfiguration.CLASSPATH_SIZE_THRESHOLD=7000
# Set to true to use 'sudo su -' for impersonation. Executes jobs in a login shell. Requires jobserver itself executed using sudo
org.talend.remote.jobserver.commons.config.JobServerConfiguration.SUDO_SU_MODE=false
# Set to false to avoid the creation of a temporary context file - useful for big data jobs where the default context is inside the job jar
# Note that if the default context is not found JS automatically uses the command line to transfer context parameters even if
# SECURE_CONTEXTS=true
org.talend.remote.jobserver.commons.config.JobServerConfiguration.SECURE_CONTEXTS=true
# Set to retrieve the job table after restart to avoid redeployment of already deployed jobs
org.talend.remote.jobserver.commons.config.JobServerConfiguration.RESTORE_JOBTABLE=true
# Set to true to unescape context parameters.
org.talend.remote.jobserver.commons.config.JobServerConfiguration.UNESCAPE_CONTEXTS=true

# Max size that a job archive is allowed to be. The default is 1G, 0 = No limit
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_JOB_FILE_SIZE=1G
# Max size that an unzipped archive is allowed to be. The default is 1G.
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_UNZIPPED_SIZE=1G
# Max number of entries allowed in a zipped archive
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_ZIPPED_ENTRIES=2048
# Maximum size of TalendJobServersFiles/archiveJobs folder, 0 = No limit, 0 = No Limit
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_ARCHIVES_DIR_SIZE=100G

# Maximum length of zip file names:
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_ZIP_NAME_LENGTH=240
# Restrict the length of any folder name in paths inside the zip file:
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_UNZIPPED_FOLDER_NAME_LENGTH=240
# Restrict the length of any file name inside the zip file:
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_UNZIPPED_FILE_NAME_LENGTH=240
# Restrict the nesting levels of folders inside the zip file:
org.talend.remote.jobserver.commons.config.JobServerConfiguration.MAX_ZIP_DEPTH=64

# Set to true to enable authorization for all jobserver commands
org.talend.remote.jobserver.commons.config.JobServerConfiguration.SECURITY_MODE=false

# Set the timeout(milliseconds) for job TRACE and STATS LOGS, value shouldn't be less than 0;
# 0 millisecond means an infinite timeout
org.talend.remote.jobserver.commons.config.JobServerConfiguration.TRACE_STATS_TIMEOUT=0

# Enables checking the job certificate timestamp which is true by default
org.talend.remote.jobserver.commons.config.JobServerConfiguration.CHECK_SIGNATURE_TIMESTAMP=true

# The location and password of the certificate used to check the Job Archive signature
#org.talend.remote.jobserver.commons.config.JobServerConfiguration.SIGNATURE_CHECK_KEYSTORE=
#org.talend.remote.jobserver.commons.config.JobServerConfiguration.SIGNATURE_CHECK_STORE_PASSWORD=

#org.talend.remote.jobserver.encrypt=false


# Set to true to enforce certificate based client authorization for JobServer
#org.talend.remote.server.ssl.authenticate=false

# avoid TLSv < 1.2 for Jobserver if possible for security reasons
#org.talend.remote.server.ssl.enabled.protocols=TLSv1.2,TLSv1.3
#org.talend.remote.server.ssl.enabled.cipher.suites=

#org.talend.remote.server.ssl.keyStore=
#org.talend.remote.server.ssl.keyStorePassword=
#org.talend.remote.server.ssl.keyPassword=

#org.talend.remote.server.ssl.trustStore=
#org.talend.remote.server.ssl.trustStorePassword=


# Set to true to enforce SSL for JMX monitoring server
org.talend.jmxmp.useSSL=false

# Set to true to enforce certificate based client authorization for JMX monitoring server
org.talend.jmxmp.ssl.authenticate=false

# avoid TLSv < 1.2 for JMX if possible for security reasons
#org.talend.jmxmp.ssl.enabled.protocols=TLSv1.2,TLSv1.3
#org.talend.jmxmp.ssl.enabled.cipher.suites=SSL_RSA_WITH_NULL_MD5

# ensure we just bind localhost
org.talend.jmxmp.wildcard = false

#org.talend.jmxmp.ssl.keyStore=<path_to_monitoring_server_keystore>
#org.talend.jmxmp.ssl.keyStorePassword=
#org.talend.jmxmp.ssl.keyPassword=
#org.talend.jmxmp.ssl.keyStoreType=JKS

#org.talend.jmxmp.ssl.trustStore=<path_to_monitoring_server_truststore>
#org.talend.jmxmp.ssl.trustStorePassword=
#org.talend.jmxmp.ssl.trustStoreType=JKS
