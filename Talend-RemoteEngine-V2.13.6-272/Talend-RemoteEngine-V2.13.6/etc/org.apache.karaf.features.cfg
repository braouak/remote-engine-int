###
#
# ============================================================================
#
# Copyright (C) 2014 - 2021 Talend Inc. - www.talend.com
#
# This source code is available under agreement available at
# %InstallDIR%\license.txt
#
# You should have received a copy of the agreement
# along with this program; if not, write to Talend SA
# 9 rue Pages 92150 Suresnes, France
#
# ============================================================================
#
###

#
# Comma separated list of features repositories to register by default
#
featuresRepositories = \
    mvn:org.apache.karaf.features/specs/4.4.6/xml/features, \
    mvn:org.apache.karaf.features/spring-legacy/4.4.6/xml/features, \
    mvn:org.apache.karaf.features/standard/4.4.6/xml/features, \
    mvn:org.apache.karaf.features/framework/4.4.6/xml/features, \
    mvn:org.apache.karaf.features/enterprise/4.4.6/xml/features, \
    mvn:org.apache.karaf.decanter/apache-karaf-decanter/2.10.0/xml/features, \
    mvn:org.ops4j.pax.web/pax-web-features/8.0.27/xml/features, \
    mvn:org.apache.activemq/activemq-karaf/5.18.4/xml/features-core, \
    mvn:org.apache.cxf.karaf/apache-cxf/3.6.3/xml/features, \
    mvn:org.apache.camel.karaf/apache-camel/3.22.2/xml/features, \
    mvn:org.talend/org.talend.jobserver.karaf.feature/8.0.2.20240507_1504_patch/xml, \
    mvn:org.talend.observability.omc/karaf-feature/1.2.19/xml/features, \
    mvn:org.talend.ipaas.engine/karaf-features/2.13.6/xml

tipaas.karaf.featuresBoot.extra = tipaas-pairing-agent, decanter-common, tipaas-observability
#tipaas.karaf.featuresBoot.extra = tipaas-cloud-engine

#
# Comma separated list of features to install at startup
#
featuresBoot = (instance, package, log, ssh, aries-blueprint, framework, system, eventadmin, feature, shell, management, service, jaas, jasypt-encryption, shell-compat, deployer, diagnostic, wrap, bundle, config, kar), camel, talend-job-server, talend-job-server-signature-verifier-disabler, talend-job-server-client, tipaas-common, observability-feature-manager, ${tipaas.karaf.featuresBoot.extra}


#
# Resource repositories (OBR) that the features resolver can use
# to resolve requirements/capabilities
#
# The format of the resourceRepositories is
# resourceRepositories=[xml:url|json:url],...
# for Instance:
#
#resourceRepositories=xml:http://host/path/to/index.xml
# or
#resourceRepositories=json:http://host/path/to/index.json
#

#
# Defines if the boot features are started in asynchronous mode (in a dedicated thread)
#
featuresBootAsynchronous=false

#
# Service requirements enforcement
#
# By default, the feature resolver checks the service requirements/capabilities of
# bundles for new features (xml schema >= 1.3.0) in order to automatically installs
# the required bundles.
# The following flag can have those values:
#   - disable: service requirements are completely ignored
#   - default: service requirements are ignored for old features
#   - enforce: service requirements are always verified
#
#serviceRequirements=default

#
# Store cfg file for config element in feature
#
#configCfgStore=true

#
# Define if the feature service automatically refresh bundles
#
#autoRefresh=true

#
# Configuration of features processing mechanism (overrides, blacklisting, modification of features)
# XML file defines instructions related to features processing
# versions.properties may declare properties to resolve placeholders in XML file
# both files are relative to ${karaf.etc}
#
#featureProcessing=org.apache.karaf.features.xml
#featureProcessingVersions=versions.properties
